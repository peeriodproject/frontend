.search-form-wrapper {
	@include pad($search-form-squish);
	@include padding-leader($search-form-padding);
	@include padding-trailer($search-form-padding);

	@include transition-property (padding, top, margin, max-height);
	@include transition-duration($search-form-index-transition-duration);
	@include transition-timing-function($search-form-index-transition-timing-function);
	@include transition-delay($search-form-index-transition-delay);

	@extend %clearfix;

	&:not(.route-search) {
		@include transition(none);

		.logo-wrapper .logo {
			@include transition(none);
		}
		
	}

	&:not(.route-search).route-index {
		@include transition(none);

		padding-top: 0;

		top: 50%;
		//margin-top: rhythm(-$search-form-height / 3 * 2);
		margin-top: rhythm(-$search-form-height);
		margin-bottom: rhythm(-$search-form-height);
		max-height: rhythm($search-form-height + $search-form-padding);

		.logo-wrapper .logo {
			@include transition(none);

			width: rhythm(5);
			//padding-bottom: rhythm(5);
			margin-top: rhythm(-1);
		}

		.search-form.focus {
			@include arrow-lazy($direction: left, $size: 10px, $color: $green-color, $center: 50%, $margin: 0, $pseudo: before);

			border-color: $green-color;
		}

		p {
			display: block;
		}
	}

	@include nested(12 - ($search-form-squish * 2)) {
		position: relative;
		top: 0;
		left: 0;
		width: 100%;
		z-index: 500;

		background-color: rgba($background-color, 0.9);
		max-height: rhythm($search-form-height + ($search-form-padding * 2));



		.logo-wrapper {
			@include span(1);
			//@include clearfix;

			.logo {
				@include transition-property (margin, width, height);
				@include transition-duration($search-form-index-transition-duration);
				@include transition-timing-function($search-form-index-transition-timing-function);
				@include transition-delay($search-form-index-transition-delay);

				//padding-bottom: rhythm(3);
				display: block;
				position: relative;
				width: rhythm(3);
				float: right;

				// dummy logo
				//background-color: darken($background-color, 10%);
				//border-radius: 10px;

				img {
					@include transition(opacity 0.15s ease);

					display: block;
					min-width: 100%;
					max-width: 100%;

					opacity: 0.45;

					&:hover,
					&:focus {
						opacity: 1;
					}
				}
			}

			.badge {
				position: absolute;
				top: 0;
				right: 0;
				background: #000;
				color: #fff;
				margin-top: strip-units($badge-font-size) / strip-units($base-font-size) * -1rem;
				-webkit-transform: translateX(50%);
				-ms-transform: translateX(50%);
				transform: translateX(50%);
			}
		}

		// input border effect
		.search-form,
		.search-form:before {
			@include transition-duration(0.15s);
			@include transition-timing-function(ease);
		}

		.search-form {
			@include span(6);
			//@include clearfix;
			
			&:before {
				z-index: 9;
			}

			&:after {
				z-index: 10;
				//border-color: red !important;
			}

			&.focus {
				@include arrow-lazy($direction: left, $size: 10px, $color: $input-border-color-hover, $center: 50%, $margin: 0, $pseudo: before);

				border-color: $input-border-color-hover;
			}

			background-color: #fff;
			border: 1px solid $input-border-color;
			border-radius: $border-radius;
			height: rhythm($search-form-height);

			@include arrow-lazy($direction: left, $size: 10px, $color: $input-border-color, $center: 50%, $margin: 0, $pseudo: before);
			@include arrow-lazy($direction: left, $size: 9px, $color: #fff, $center: 50%, $margin: 0, $pseudo: after);
		
			@include nested(6) {
				.search-input {
					padding: 0;

					@include adjust-font-size-to(23px, 2);
					@include padding-leader(1/2, 23px);
					@include padding-trailer(1/2, 23px);
					
					@include span(5);
					@include gutters(2rem inside);
					
					border: none;
					outline: none;
					background-color: transparent;

					color: $dark-color;

				}

				button {
					opacity: 1;
					@include transition(opacity 0.15s ease);
				}

				button.clear {
					left: span(5) - (gutter() / 2);
					top: rhythm(1, $icon-button-font-size);
					height: rhythm(1, $icon-button-font-size);

					position: absolute;

					.icon {
						svg use {
							fill: $icon-color-light;
						}
					}

					&:hover,
					&:focus {
						.icon svg use {
							fill: $icon-color;
						}
					}

					&[disabled] {
						opacity: 0;
					}
				}

				button.search {
					@include span(1 last);

					height: rhythm(3, $icon-button-font-size);

					.icon {
						&.icon-loading use {
							@include animation(spin 2s linear infinite);
							@include transform-origin(center);

							fill: $icon-color-light;
						}

						&.icon-tick use {
							fill: $green-color;
						}
					}

					&[disabled] {
						.icon {
							svg use {
								fill: $icon-color-light;
							}
						}
					}
				}
			}
		}

		p {
			@include margin-leader(0.5);
			@include span(7 last);
			@include suffix(1);
			padding-left: gutter(2rem inside);

			display: none;

			a {
				@include transition(color 0.15s ease);

				color: $dark-color;
				font-weight: bold;

				&:hover,
				&:focus {
					color: $green-color;
					text-decoration: none;
				}
			}
		}
	}
}